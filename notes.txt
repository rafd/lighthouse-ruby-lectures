Intro to JS

HISTORY

Birth of the Web
  1993 - mosaic (first browser)
  1994 - netscape browser
  1995 - javascript (in netscape)
  1997 - ECMAscript (js standardized)

Dark Ages of JS (js is slow, non-standard, and only good for animations)
  .
  .
  .

Ajax! (no more page reloads)
  2004 - XMLHttpRequest (ajax)
  2004 - GMail
  2005 - google maps

The JS Boom
  2006 - jquery (utility library)
  2008 - chrome + V8 (js is fast now!)
  2009 - node (js runs on the server)
  2010 - knockout, backbone (start of js frameworks)

Single Page App Frameworks (do everything in js!)
  2011 - ember
  2012 - angular
  2012 - meteor
  2013 - react

Transpilers (compile things to js)
  2009 coffeescript
  2011 clojurescript
  2014 babel (ES6)

The Future
  2015 ECMAscript 6 (classes 'n stuff)
       http://addyosmani.com/blog/ecmascript-6-resources-for-the-curious-javascripter/
  ???? WebAssembly (new faster language! let's compile to this instead)
       https://github.com/WebAssembly/design/blob/master/README.md


RUBY VS JS

  syntax differences
    http://agentcooper.io/js-ruby-comparison/

  key things to know
    first-order functions
      ie. functions are objects

      var square = function(x) {
        return x*x;
      }
      square // the function object
      square(6) // calling the function

      no implicit returns
      can have anonymous functions (think blocks in ruby)

    most functions are asynchronous
      need to use the callback pattern

      doSomethingAsync(data, function(x,y,z) {
        // then do this
      });

    hashes/maps == objects
      can use prototypes to define things which can have instances, but in practise, js devs just use hashes

      var contact = {
        first_name: "John",
        last_name: Smith",
        email: 'john.smith@gmail.com',
        fullName: function() {
          return this.first_name + ' ' + this.last_name;
        }
      };

    scope
      defaults to global
      use var

EXAMPLES

  including on webpage (see app.html)

  app.js
    console.log
    prompt, alert
    setInterval, setTimeout
    looping

  jquery.js
    finding elements on page
    appending
    change css of elements
    ajax
    listening to events

  guessing-game.js
    example of how to organize code
